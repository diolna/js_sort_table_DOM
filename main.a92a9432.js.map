{"version":3,"sources":["scripts/main.js"],"names":["table","document","getElementsByTagName","rowsBody","tBodies","rows","rowsHead","tHead","cells","item","spanElem","createElement","textContent","innerText","firstChild","nodeValue","prepend","Sort","arrayRows","column","sort","a","b","A","children","B","slice","replace","addEventListener","e","target","tagName","append"],"mappings":"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","file":"main.a92a9432.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.getElementsByTagName('table');\n\nconst rowsBody = table[0].tBodies[0].rows;\nconst rowsHead = table[0].tHead.rows;\n\nfor (const item of rowsHead[0].cells) {\n  const spanElem = document.createElement('span');\n\n  spanElem.textContent = item.innerText;\n  item.firstChild.nodeValue = '';\n  item.prepend(spanElem);\n}\n\ndocument.addEventListener('click', (e) => {\n  let sort = [];\n\n  if (e.target.tagName !== 'SPAN') {\n    return;\n  }\n\n  switch (e.target.textContent) {\n    case 'Name':\n      sort = Sort([...rowsBody], 0);\n      break;\n    case 'Position':\n      sort = Sort([...rowsBody], 1);\n      break;\n    case 'Age':\n      sort = Sort([...rowsBody], 2);\n      break;\n    case 'Salary':\n      sort = Sort([...rowsBody], 3);\n      break;\n  }\n\n  table[0].tBodies[0].append(...sort);\n});\n\nfunction Sort(arrayRows, column) {\n  switch (column) {\n    case 0: case 1:\n      return [...rowsBody].sort((a, b) => {\n        const A = a.children[column].textContent;\n        const B = b.children[column].textContent;\n\n        return (A < B) ? -1 : (A > B) ? 1 : 0;\n      });\n    case 2:\n      return [...rowsBody].sort((a, b) => {\n        return +a.children[column].textContent\n        - +b.children[column].textContent;\n      });\n    case 3:\n      return [...rowsBody].sort((a, b) => {\n        const A = +a.children[column].textContent.slice(1).replace(',', '.');\n        const B = +b.children[column].textContent.slice(1).replace(',', '.');\n\n        return A - B;\n      });\n  }\n}\n"]}